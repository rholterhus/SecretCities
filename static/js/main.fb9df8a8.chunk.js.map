{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","require","mapboxgl","workerClass","default","accessToken","useStyles","makeStyles","theme","menuButton","position","left","top","margin","spacing","menuIcon","fill","modalCancelButton","right","modalCancelIcon","width","height","switch","cardRoot","modalImageButton","maxWidth","modalImageButtonIcon","buildPopup","title","image","popupHTML","parseTuple","t","items","replace","split","forEach","val","index","array","map","Number","reverse","Sidebar","open","locations","mapRef","useState","filter","setFilter","history","useHistory","filterUsed","test","filteredLocations","location","name","toLowerCase","includes","useEffect","current","setFeatureState","source","id","filtered","className","onChange","e","onCancelSearch","style","borderRadius","borderBottom","boxShadow","backgroundColor","onPointerDown","onMouseEnter","coordinates","longitude","latitude","images","popup","Popup","closeButton","closeOnClick","flyTo","center","esssential","speed","fire","setLngLat","setHTML","addTo","on","remove","onMouseLeave","description","slice","MemoizedSidebar","React","memo","Modal","classes","locationName","useParams","locationIndex","l","indexOf","imageIndex","IconButton","onClick","src","App","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","setOpen","mapboxStyle","setMapboxStyle","setLocations","get","then","resp","data","console","log","Map","container","addControl","NavigationControl","getCenter","toFixed","getZoom","addSource","location_id","addLayer","hoveredID","push","features","properties","getCanvas","cursor","geometry","Math","abs","lngLat","length","hover","prev","Switch","color","path","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb9df8a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchBar from \"material-ui-search-bar\";\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n\nimport ImageGallery from 'react-image-gallery';\n\n\nimport { Switch as RouterSwitch, Route, Link, useRouteMatch, useParams, useHistory} from 'react-router-dom';\n\n\nconst axios = require('axios');\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaG9sdGVyaHVzIiwiYSI6ImNrOWhkem96ZDB3Z2EzZ25hM3NhMXRuY2QifQ._wWey2Tkg64i1vzd1tUIoQ';\n\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    margin: theme.spacing(1),\n  },\n  menuIcon: {\n    fill: 'white'\n  },\n  modalCancelButton: {\n    position: 'absolute',\n    right: 0,\n  },\n  modalCancelIcon: {\n    fill: 'black',\n    width: \"35px\",\n    height: \"35px\"\n  },\n  switch: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    margin: theme.spacing(0.5),\n  },\n  cardRoot: {\n    width: '100%',\n  },\n  modalImageButton: {\n    maxWidth: '10%',\n  },\n  modalImageButtonIcon: {\n    maxWidth: '10%',\n  },\n}));\n\n\nconst buildPopup = (title, image) => {\n  let popupHTML = `<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">`\n  popupHTML += `<strong>${title}</strong>`\n  popupHTML += image ? `<img src=\\\"${image}\\\" style=\"max-width: 30vmin; max-height: 25vmin;\"/>` : ''\n  popupHTML += `</div>`\n  return popupHTML;\n}\n\nfunction parseTuple(t) {\n  var items = t.replace(/^\\(|\\)$/g, \"\").split(\"),(\");\n  items.forEach(function(val, index, array) {\n    array[index] = val.split(\",\").map(Number);\n  });\n  return items[0].reverse();\n}\n\n\n\nconst Sidebar = ({open, locations, mapRef}) => {\n\n  const [filter, setFilter] = useState('');\n  const history = useHistory();\n\n  const filterUsed = /[a-zA-Z]/g.test(filter);\n\n  const filteredLocations = locations.filter(location => {\n    return !filterUsed || location.name.toLowerCase().includes(filter.toLowerCase());\n  })\n\n  useEffect(() => {\n    if (mapRef.current != null) {\n      locations.forEach(location => {\n        mapRef.current.setFeatureState({source: 'locations', id: location.id}, { filtered: false });\n      })\n      if (filterUsed) {\n        filteredLocations.forEach(location => {\n          mapRef.current.setFeatureState({source: 'locations', id: location.id}, { filtered: true });\n        })\n      }\n    }\n  }, [filter]);\n\n  return (\n    <div className={\"sidebar \" + (open ? \"open\" : \"closed\")}>\n      <SearchBar\n        onChange={(e) => setFilter(e)}\n        onCancelSearch={() => setFilter('')}\n        style={{\n          width: '100%',\n          borderRadius: 0,\n          borderBottom: '1px solid black',\n          boxShadow: 'none',\n          backgroundColor: '#f5f5f5',\n        }}\n      />\n      <div className=\"cards\" id=\"cards\">\n        {filteredLocations.map(location => \n          <div \n            className=\"cardBase\"\n            id={\"location-\" + location.id}\n            onPointerDown={() => history.replace('/MTLsecrets/' + location.name)}\n          >\n            <div className=\"cardButtonContainer\">\n              <div \n                className=\"cardButton\"\n                style={{backgroundColor: filterUsed ? '#ff00ff' : 'red'}}\n                onMouseEnter={() => {\n                  if(!mapRef.current) return;\n                  const coordinates = [location.longitude, location.latitude];\n                  const popupHTML = buildPopup(location.name, location.images[0]);\n                  var popup = new mapboxgl.Popup({\n                    closeButton:  false,\n                    closeOnClick: false,\n                  });\n    \n                  mapRef.current.flyTo({ center: coordinates, esssential: true, speed: 0.35 })\n                  mapRef.current.fire('closeAllPopups');\n                  popup.setLngLat(coordinates).setHTML(popupHTML).addTo(mapRef.current);\n                  mapRef.current.on('closeAllPopups', () => {\n                    popup.remove();\n                  });\n                }\n              }\n              onMouseLeave={() => mapRef.current.fire('closeAllPopups')}\n              >\n              </div>\n            </div> \n            <div className=\"cardTitle\">{location.name}</div>\n            <br/>\n            <div className=\"cardDescription\">\n              {location.description.slice(0, 100)}  \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n\nconst MemoizedSidebar = React.memo(Sidebar);\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const history = useHistory();\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  const [lng, setLng] = useState(-73.6573);\n  const [lat, setLat] = useState(45.5017);\n  const [zoom, setZoom] = useState(10);\n  const [open, setOpen] = useState(true);\n  const [mapboxStyle, setMapboxStyle] = useState('mapbox://styles/mapbox/streets-v11');\n\n  const [locations, setLocations] = useState([]);\n\n\n  const toggleMapType = () => {\n    const newMapType = mapboxStyle === 'mapbox://styles/mapbox/streets-v11' ? \n    'mapbox://styles/mapbox/satellite-v9' : 'mapbox://styles/mapbox/streets-v11';\n    setMapboxStyle(newMapType);\n  }\n\n  useEffect(() => {\n    axios.get('http://149.248.60.88:3000/locations')\n    .then((resp) => {\n      const locations = resp.data.map(location => ({\n        ...location,\n        coordinates: parseTuple(location.coordinates),\n      }))\n      setLocations(locations);\n      console.log(locations)\n    });\n    \n  }, []);\n\n  \n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: mapboxStyle,\n      center: [lng, lat],\n      zoom: zoom\n    });\n    mapRef.current = map\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    map.on('load', () => {\n       \n        // Add a data source containing one point feature.\n        map.addSource('locations', {\n          'type': 'geojson',\n          'data': {\n            'type': 'FeatureCollection',\n            'features': locations.map(location => {\n              return {\n                'type': 'Feature',\n                \"id\": location.location_id,\n                'properties': {\n                  'title': location.name,\n                  'image': location.images[0],\n                },\n                'geometry': {\n                  'type': 'Point',\n                  'coordinates': location.coordinates\n                }\n              }\n            })\n          }\n        });\n    \n        map.addLayer({\n          'id': 'locations',\n          'type': 'circle',\n          'source': 'locations',\n          'paint': {\n            'circle-color': [\n              'case',\n              ['boolean', ['feature-state', 'hover'], false], '#000',\n              ['boolean', ['feature-state', 'filtered'], false], '#ff00ff',\n              '#ff0000',\n            ],\n            'circle-radius': 10,\n            'circle-stroke-width': 2,\n            'circle-stroke-color': '#000000'\n          }\n        });\n\n\n      });\n\n      var popup = new mapboxgl.Popup({\n        closeButton:  false,\n        closeOnClick: false,\n      });\n\n      var hoveredID = null;\n\n      map.on('mousedown', 'locations', (e) => {\n        history.push('MTLsecrets/' + e.features[0].properties.title);\n      })\n\n      map.on('mousemove', 'locations', (e) => {\n\n        map.getCanvas().style.cursor = 'pointer';\n        let coordinates = e.features[0].geometry.coordinates.slice();\n        let popupHTML = buildPopup(e.features[0].properties.title, e.features[0].properties.image);\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n        \n        mapRef.current.fire('closeAllPopups');\n        popup.setLngLat(coordinates).setHTML(popupHTML).addTo(map);\n\n        if (e.features.length > 0) {\n          if (hoveredID) {\n            map.setFeatureState({\n              source: 'locations',\n              id: hoveredID,\n            }, {\n              hover: false\n            });\n          }\n          hoveredID = e.features[0].id;\n          map.setFeatureState({\n            source: 'locations',\n            id: hoveredID,\n          }, {\n            hover: true\n          });\n\n      }\n    });\n\n    map.on(\"mouseleave\", \"locations\", function() {\n      if (hoveredID != null) {\n        map.setFeatureState({\n          source: 'locations',\n          id: hoveredID\n        }, {\n          hover: false\n        });\n      }\n      hoveredID = null;\n      map.getCanvas().style.cursor = '';\n      popup.remove();\n    });\n      \n    return () => map.remove();\n  }, [locations, mapboxStyle]);\n\n\n  return (\n    <>\n      <div className=\"topbar\">\n        <IconButton\n          className={classes.menuButton}\n          onClick={() => setOpen(prev => !prev)}\n        >\n            {open ? <ChevronLeftIcon className={classes.menuIcon}/> : <MenuIcon className={classes.menuIcon}/> }\n        </IconButton>\n        <div className=\"logo\">\n          MTLSECRETS\n        </div>\n        <Switch color=\"secondary\" onChange={toggleMapType} className={classes.switch}/>\n      </div>\n      <div className=\"topSpacer\"></div>\n      <div className=\"mainContent\">\n        <MemoizedSidebar open={open} locations={locations} mapRef={mapRef}/>\n        <RouterSwitch>\n          <Route path=\"/MTLsecrets/:locationName\">\n            <Modal locations={locations}/>\n          </Route> \n        </RouterSwitch>\n       </div>\n       <div ref={mapContainer} className=\"map-container\"/>\n    </>\n  );\n}\n\n\n\nconst Modal = ({ locations }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  let { locationName } = useParams();\n  const locationIndex = locations.map(l => l.name).indexOf(locationName);\n  const location = locations[locationIndex];\n\n  const [imageIndex, setImageIndex] = useState(0);\n\n  if (!location) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modalTitle\">\n        {location.name}\n        <IconButton\n        className={classes.modalCancelButton}\n        onClick={() => {\n          history.replace('/MTLsecrets')\n        }}\n        >\n            <CancelIcon className={classes.modalCancelIcon}/>\n        </IconButton>\n      </div>\n      <div className=\"modalImagesContainer\">\n        <img className=\"modalImage\" src={location.images[imageIndex]}/>\n        {/* <IconButton\n          className={classes.modalImageButton}\n          onClick={() => setImageIndex(prev => (prev - 1) % (location.images.length || 1))}\n          >\n          <ChevronLeftIcon className={classes.modalImageButtonIcon}/>\n        </IconButton> */}\n        \n        {/* <IconButton\n          className={classes.modalImageButton}\n          onClick={() => setImageIndex(prev => (prev + 1) % (location.images.length || 1))}\n          >\n          <ChevronRightIcon className={classes.modalImageButtonIcon}/>\n      </IconButton> */}\n      </div>\n      <div className=\"modalDescriptionContainer\">\n        <div className=\"modalDescription\">\n          {location.description}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}